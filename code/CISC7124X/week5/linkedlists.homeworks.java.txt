Chris Samuel
CISC 7124X Week 5
Homework 5
24141468


class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode slow = head;
        ListNode fast = head;
        while(fast != null && fast.next != null){
            fast = fast.next.next;
            slow = slow.next;
        }
        if(fast != null)
            slow = slow.next;
        
        slow = reverse(slow);
        fast = head;
        
        while(slow != null){
            if(slow.val != fast.val)
                return false;
            slow = slow.next;
            fast = fast.next;
        }
        return true;
    }
    
    private ListNode reverse(ListNode head){
        ListNode newHead = null;
        while(head != null){
            ListNode next = head.next;
            head.next = newHead;
            newHead = head;
            head = next;
        }
        return newHead;
    }
    public ListNode reverse(ListNode mid) {
        ListNode prev = null;
        ListNode curr = mid;
        
        while (curr != null) {
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }

    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {
            ListNode temp1=list1;
            ListNode temp2=list1;
            int h=Math.max(a,b);
            int s=Math.min(a,b);
            System.out.println(s);
            int i =0;
            while(temp1!=null && i!=s-1 ){//now here we will stop early by one
                temp1=temp1.next;
                i++;
            }
            int j =0;
            while(temp2!=null && j!=h){//here we stop on the node
                temp2=temp2.next;
                j++;
            }
            temp1.next=list2;
            ListNode temp= list2;
            while(temp.next!=null){
                temp=temp.next;
            }
            temp.next=temp2.next;
            
            return list1;

}